name: ci-deploy-dev

on:
  pull_request:
    branches:
    - main

jobs:
  deploy-dev:
    runs-on: ubuntu-22.04
    environment: dev
    steps:
        - 
            uses: actions/checkout@v4

        -
            name: Install SqlProj
            run: |
                dotnet new --install MSBuild.Sdk.SqlProj.Templates

        -
            name: Create sqlproj
            run: |
                dotnet new sqlproj -s SqlAzure --name hows-the-weather --force

        -
            name: Build db model
            id: msbuild
            run: |
                dotnet build hows-the-weather/hows-the-weather.csproj >> msbuild_output

                {
                    echo 'command_output<<EOF'
                    echo "$(cat msbuild_output)"
                    echo EOF
                } >> $GITHUB_OUTPUT

        - 
            name: Comment on PR with command output
            uses: actions/github-script@v6
            with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                    github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: `msbuild process is complete. Please review the output below:\n\n \`\`\`${{ steps.msbuild.outputs.command_output }}\`\`\`\n`
                    });

        -
            name: Add MSFT key
            run: |
                curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc

        -
            name: Add MSFT repo
            run: |
                curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list

        -
            name: apt update
            run: |
                sudo apt update

        -
            name: install mssql
            run: |
                ACCEPT_EULA=Y sudo apt-get install mssql-tools18 unixodbc-dev -y 

        -
            name: Add sqlcmd to path
            run: |
                export PATH="$PATH:/opt/mssql-tools18/bin"

        -
            name: install sqlpackage
            run: |
                dotnet tool install --global microsoft.sqlpackage

        -
            name: add dotnet tooling to path
            run: |
                export PATH="${PATH}:/root/.dotnet/tools"

        -
            name: deploy database
            run: |
                sqlpackage /Action:Publish \
                /SourceFile:hows-the-weather/bin/Debug/net8.0/hows-the-weather.dacpac \
                /TargetServerName:"${{ secrets.DB_DEPLOY_HOST }}" \
                /TargetDatabaseName:"${{ secrets.DB_DEPLOY_DATABASE }}" \
                /TargetUser:"${{ secrets.DB_DEPLOY_USER}}" \
                /TargetPassword:"${{ secrets.DB_DEPLOY_PASS }}" \
                /TargetTrustServerCertificate:True

        - 
            name: post deploy user creation
            run: |
                sqlcmd \
                -S ${{ secrets.DB_DEPLOY_HOST }} \
                -d ${{ secrets.DB_DEPLOY_DATABASE }} \
                -U ${{ secrets.DB_DEPLOY_USER }} \
                -P ${{ secrets.DB_DEPLOY_PASS }} \
                -i hows-the-weather/PostDeploy/user_creation.sql \
                -C

        - 
            name: post deploy user permissions
            run: |
                sqlcmd \
                -S ${{ secrets.DB_DEPLOY_HOST }} \
                -d ${{ secrets.DB_DEPLOY_DATABASE }} \
                -U ${{ secrets.DB_DEPLOY_USER }} \
                -P ${{ secrets.DB_DEPLOY_PASS }} \
                -i hows-the-weather/PostDeploy/user_permissions.sql \
                -C
